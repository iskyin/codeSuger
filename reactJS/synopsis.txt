ExtJS是一个企业级框架，借鉴了java的Swing设计，同java一样有着教科书般的学院风格，也同Swing一样注定曲高和寡

传统组件化特点：
	把组件和原生DOM节点的渲染割裂起来，要么如ExtJS一样抛弃原生DOM节点，要么在原生DOM节点渲染后再渲染自定义组件。
现代的组件架构：
	原生DOM节点和自定义组件的统一渲染融合

React 专注于组件架构的类库
	发源于PHP框架XHP的一个分支，XHP作为一个PHP框架，旨在每次有请求进来时渲染整个页面

简介：
	
	1. React不是一个mvc的框架，最多认为是mvc中的v，react不认可mvc开发模式
	2. React的服务器端Render能力只能算是一个锦上添花的功能，并不是核心出发点
	3. React不是一个新的模板语言，JSX只是一个表象，没有JSX的React也能工作




虚拟DOM机制：
	* 在浏览器端用javascript实现了一套DOM API。基于React进行开发时所有的DOM结构都是通过虚拟DOM进行，每当数据变化时，React都会重新构建整个DOM树，然后React将当前整个DOM树和上次的DOM树进行对比，得到DOM结构的区别，然后仅仅将需要变化的部分进行实际的浏览器DOM更新。
	* React能够批量处理虚拟DOM的刷新，在一个事件循环内两次数据变化会被合并

组件化（封装起来的具有独立功能的UI部件）：
	*  组件的特征：
		1. 可组合：一个组件易于和其他组件一起使用，或者嵌套再另一个组件内部。
		2. 可重用：每个组件都是具有独立功能的，他可以被使用在多个UI场景
		3. 可维护：每个小的组件仅仅包含自身的逻辑，更容易被理解和维护。

	· 组件化的思考方式则是带来了UI功能模块之间的分离。
	· React将组件看成一个状态机，一开始有一个初始状态，然后用户互动，导致状态变化，从而触发重新渲染UI。


ReactDOM.render 是 React 的最基本方法，用于将模板转为 HTML 语言，并插入指定的 DOM 节点。


React.createClass 方法用于生成一个组件类。


注意点：
	1）获取属性的值用的是this.props.属性名
	2）创建的组件名称首字母必须大写。
	3）为元素添加css的class时，要用className。
	4）组件的style属性的设置方式也值得注意，要写成style={{width: this.state.witdh}}。






