HTTP劫持
	大多数情况是运营商HTTP劫持，当我们使用HTTP请求请求一个网站页面的时候，
	网络运营商会在正常的数据流中插入精心设计的网络数据报文，
	让客户端（通常是浏览器）展示“错误”的数据，通常是一些弹窗，
	宣传性广告或者直接显示某网站的内容，大家应该都有遇到过



DNS劫持
	DNS劫持就是通过劫持了DNS服务器，通过某些手段取得某域名的解析记录控制权，
	进而修改此域名的解析结果，导致对该域名的访问由原IP地址转入到修改后的指定IP，
	其结果就是对特定的网址不能访问或访问的是假网址，
	从而实现窃取资料或者破坏原有正常服务的目的。



XSS跨站脚本
	XSS指的是攻击者漏洞，向Web页面中注入恶意代码，当用户浏览该页之时，
	注入的代码会被执行，从而达到攻击的特殊目的。


解决方案:
	1. 页面被嵌入iframe中，重定向iframe
	   使用白名单放行正常 iframe 嵌套
	   更改 URL 参数绕过运营商标记
	   内联事件及内联脚本拦截
	2. 静态脚本拦截  使用白名单对 src 进行匹配过滤
	3. 动态脚本拦截
	   Mutation Events 与 DOMNodeInserted
	4. 重写 setAttribute 与 document.write
	5. 重写嵌套 iframe 内的 Element.prototype.setAttribute
	6. 锁死 apply 和 call
	   Object.defineProperty() 
	   	方法直接在一个对象上定义一个新属性，或者修改一个已经存在的属性， 并返回这个对象。
	   	Object.defineProPerty(obj,prop,descriptor)
	   		obj:需要定义属性的对象
	   		prop:需被定义或修改的属性名
	   		descriptor：需被定义或修改的属性的描述符




















